{
  "hash": "cff5388d144c1aedc30013c9dd2ef18f",
  "result": {
    "markdown": "---\ntitle: \"Classification of Customer queries\"\ntitle-slide-attributes:\n  data-background-image: ../images/logo.png\n  data-background-size: contain\n  data-background-opacity: \"0.5\"\nlang: en\nsubtitle: Tutorial 2\nauthor: Jan Kirenz\nexecute:\n  eval: true\n  echo: true\nhighlight-style: github\nformat:\n  revealjs: \n    toc: true\n    toc-depth: 2\n    embed-resources: false\n    theme: [dark, ../custom.scss]  \n    incremental: true\n    transition: slide\n    background-transition: fade\n    transition-speed: slow\n    code-copy: true\n    code-line-numbers: true\n    smaller: false\n    scrollable: true\n    slide-number: c\n    preview-links: auto\n    chalkboard: \n      buttons: false\n   # logo: ../images/logo.png\n    footer: Jan Kirenz\n---\n\n# Setup\n\n## Python\n\n::: {#2dc6eb8e .cell execution_count=1}\n``` {.python .cell-code}\nimport os\nimport openai\nfrom dotenv import load_dotenv, find_dotenv\n_ = load_dotenv(find_dotenv())  # read local .env file\n\nopenai.api_key = os.environ['OPENAI_API_KEY']\n```\n:::\n\n\n## Helper function\n\n::: {#012ee24e .cell execution_count=2}\n``` {.python .cell-code}\ndef get_completion_from_messages(messages,\n                                 model=\"gpt-3.5-turbo\",\n                                 temperature=0,\n                                 max_tokens=500):\n    response = openai.ChatCompletion.create(\n        model=model,\n        messages=messages,\n        temperature=temperature,\n        max_tokens=max_tokens,\n    )\n    return response.choices[0].message[\"content\"]\n\n```\n:::\n\n\n# Classification of Customer queries\n\nClassify customer queries to handle different cases\n\n\n## System message {.smaller}\n\n::: {#a36aadae .cell execution_count=3}\n``` {.python .cell-code}\ndelimiter = \"####\"\n\nsystem_message = f\"\"\"\nYou will be provided with customer service queries. \\\nThe customer service query will be delimited with \\\n{delimiter} characters.\nClassify each query into a primary category \\\nand a secondary category. \nProvide your output in json format with the \\\nkeys: primary and secondary.\n\nPrimary categories: Billing, Technical Support, \\\nAccount Management, or General Inquiry.\n\nBilling secondary categories:\nUnsubscribe or upgrade\nAdd a payment method\nExplanation for charge\nDispute a charge\n\nTechnical Support secondary categories:\nGeneral troubleshooting\nDevice compatibility\nSoftware updates\n\nAccount Management secondary categories:\nPassword reset\nUpdate personal information\nClose account\nAccount security\n\nGeneral Inquiry secondary categories:\nProduct information\nPricing\nFeedback\nSpeak to a human\n\n\"\"\"\n```\n:::\n\n\n## User message\n\n::: {#b3537af5 .cell execution_count=4}\n``` {.python .cell-code}\nuser_message = f\"\"\"\\\nI want you to delete my profile and all of my user data\"\"\"\nmessages = [\n    {'role': 'system',\n     'content': system_message},\n    {'role': 'user',\n     'content': f\"{delimiter}{user_message}{delimiter}\"},\n]\n```\n:::\n\n\n## Output\n\n::: {#5539cf5b .cell output-location='fragment' execution_count=5}\n``` {.python .cell-code}\nresponse = get_completion_from_messages(messages)\nprint(response)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n{\n  \"primary\": \"Account Management\",\n  \"secondary\": \"Close account\"\n}\n```\n:::\n:::\n\n\n## User message 2\n\n::: {#55117af2 .cell execution_count=6}\n``` {.python .cell-code}\nuser_message = f\"\"\"\\\nTell me more about your flat screen tvs\"\"\"\nmessages = [\n    {'role': 'system',\n     'content': system_message},\n    {'role': 'user',\n     'content': f\"{delimiter}{user_message}{delimiter}\"},\n]\n```\n:::\n\n\n# Output\n\n::: {#3642c533 .cell output-location='fragment' execution_count=7}\n``` {.python .cell-code}\nresponse = get_completion_from_messages(messages)\nprint(response)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n{\n  \"primary\": \"General Inquiry\",\n  \"secondary\": \"Product information\"\n}\n```\n:::\n:::\n\n\n# What's next? {background-image=\"../images/logo.png\" background-opacity=\"0.5\"}\n\n- **Congratulations! You have completed this tutorial** üëç\n\n- **Next, you may want to go back to the [lab's website](https://kirenz.github.io/lab-chat-system/)**\n\n",
    "supporting": [
      "classification_files"
    ],
    "filters": [],
    "includes": {}
  }
}