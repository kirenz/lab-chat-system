{
  "hash": "59e3e729154464a7d5f2f9776b849c69",
  "result": {
    "markdown": "---\ntitle: Check Outputs Prompts\ntitle-slide-attributes:\n  data-background-image: ../images/logo.png\n  data-background-size: contain\n  data-background-opacity: \"0.5\"\nlang: en\nsubtitle: Tutorial 6\nauthor: Jan Kirenz\nexecute:\n  eval: false\n  echo: true\nhighlight-style: github\nformat:\n  revealjs: \n    toc: true\n    toc-depth: 1\n    embed-resources: false\n    theme: [dark, ../custom.scss]  \n    incremental: true\n    transition: slide\n    background-transition: fade\n    transition-speed: slow\n    code-copy: true\n    code-line-numbers: true\n    smaller: false\n    scrollable: true\n    slide-number: c\n    preview-links: auto\n    chalkboard: \n      buttons: false\n   # logo: ../images/logo.png\n    footer: Jan Kirenz\n---\n\n# Check Outputs Prompts\n\nAsk the model to verify its own outputs.\n\n# Setup\n\n## Python\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport os\nimport openai\nfrom dotenv import load_dotenv, find_dotenv\n_ = load_dotenv(find_dotenv()) \n\nopenai.api_key = os.environ['OPENAI_API_KEY']\n```\n:::\n\n\n# Helper function\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\ndef get_completion_from_messages(messages, model=\"gpt-3.5-turbo\", temperature=0, max_tokens=500):\n    response = openai.ChatCompletion.create(\n        model=model,\n        messages=messages,\n        temperature=temperature,\n        max_tokens=max_tokens,\n    )\n    return response.choices[0].message[\"content\"]\n\n```\n:::\n\n\n# Detect Harmful Output\n\n## Final response\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nfinal_response_to_customer = f\"\"\"\nThe SmartX ProPhone has a 6.1-inch display, 128GB storage, \\\n12MP dual camera, and 5G. The FotoSnap DSLR Camera \\\nhas a 24.2MP sensor, 1080p video, 3-inch LCD, and \\\ninterchangeable lenses. We have a variety of TVs, including \\\nthe CineView 4K TV with a 55-inch display, 4K resolution, \\\nHDR, and smart TV features. We also have the SoundMax \\\nHome Theater system with 5.1 channel, 1000W output, wireless \\\nsubwoofer, and Bluetooth. Do you have any specific questions \\\nabout these products or any other products we offer?\n\"\"\"\n```\n:::\n\n\n## Moderation API\n\n- Check output for potentially harmful content\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nresponse = openai.Moderation.create(\n    input=final_response_to_customer\n)\n```\n:::\n\n\n. . .\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\nmoderation_output = response[\"results\"][0]\nprint(moderation_output)\n```\n:::\n\n\n## Output {.smaller}\n\n{\n  \"flagged\": false,\n  \"categories\": {\n    \"sexual\": false,\n    \"hate\": false,\n    \"harassment\": false,\n    \"self-harm\": false,\n    \"sexual/minors\": false,\n    \"hate/threatening\": false,\n    \"violence/graphic\": false,\n    \"self-harm/intent\": false,\n    \"self-harm/instructions\": false,\n    \"harassment/threatening\": false,\n    \"violence\": false\n  },\n  \"category_scores\": {\n    \"sexual\": 2.2853287191537675e-06,\n    \"hate\": 8.689411856721563e-08,\n    \"harassment\": 4.445904266958678e-07,\n    \"self-harm\": 8.501614523481749e-09,\n    \"sexual/minors\": 1.2479181066282763e-07,\n    \"hate/threatening\": 2.1572541530900935e-09,\n    \"violence/graphic\": 1.2744135347020347e-07,\n    \"self-harm/intent\": 1.3307280610774797e-08,\n    \"self-harm/instructions\": 4.01164648167196e-08,\n    \"harassment/threatening\": 1.4587811847377452e-08,\n    \"violence\": 3.7806817090313416e-06\n  }\n}\n\n# Output Check 1\n\nCheck if output is factually based on the provided product information\n\n## System message {.smaller}\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nsystem_message = f\"\"\"\nYou are an assistant that evaluates whether \\\ncustomer service agent responses sufficiently \\\nanswer customer questions, and also validates that \\\nall the facts the assistant cites from the product \\\ninformation are correct.\nThe product information and user and customer \\\nservice agent messages will be delimited by \\\n3 backticks, i.e. ```.\nRespond with a Y or N character, with no punctuation:\nY - if the output sufficiently answers the question \\\nAND the response correctly uses product information\nN - otherwise\n\nOutput a single letter only.\n\"\"\"\n\n```\n:::\n\n\n## Customer message \n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\ncustomer_message = f\"\"\"\ntell me about the smartx pro phone and \\\nthe fotosnap camera, the dslr one. \\\nAlso tell me about your tvs\"\"\"\n\n```\n:::\n\n\n## Product information \n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\nproduct_information = \"\"\"{ \"name\": \"SmartX ProPhone\", \"category\": \"Smartphones and Accessories\", \"brand\": \"SmartX\", \"model_number\": \"SX-PP10\", \"warranty\": \"1 year\", \"rating\": 4.6, \"features\": [ \"6.1-inch display\", \"128GB storage\", \"12MP dual camera\", \"5G\" ], \"description\": \"A powerful smartphone with advanced camera features.\", \"price\": 899.99 } { \"name\": \"FotoSnap DSLR Camera\", \"category\": \"Cameras and Camcorders\", \"brand\": \"FotoSnap\", \"model_number\": \"FS-DSLR200\", \"warranty\": \"1 year\", \"rating\": 4.7, \"features\": [ \"24.2MP sensor\", \"1080p video\", \"3-inch LCD\", \"Interchangeable lenses\" ], \"description\": \"Capture stunning photos and videos with this versatile DSLR camera.\", \"price\": 599.99 } { \"name\": \"CineView 4K TV\", \"category\": \"Televisions and Home Theater Systems\", \"brand\": \"CineView\", \"model_number\": \"CV-4K55\", \"warranty\": \"2 years\", \"rating\": 4.8, \"features\": [ \"55-inch display\", \"4K resolution\", \"HDR\", \"Smart TV\" ], \"description\": \"A stunning 4K TV with vibrant colors and smart features.\", \"price\": 599.99 } { \"name\": \"SoundMax Home Theater\", \"category\": \"Televisions and Home Theater Systems\", \"brand\": \"SoundMax\", \"model_number\": \"SM-HT100\", \"warranty\": \"1 year\", \"rating\": 4.4, \"features\": [ \"5.1 channel\", \"1000W output\", \"Wireless subwoofer\", \"Bluetooth\" ], \"description\": \"A powerful home theater system for an immersive audio experience.\", \"price\": 399.99 } { \"name\": \"CineView 8K TV\", \"category\": \"Televisions and Home Theater Systems\", \"brand\": \"CineView\", \"model_number\": \"CV-8K65\", \"warranty\": \"2 years\", \"rating\": 4.9, \"features\": [ \"65-inch display\", \"8K resolution\", \"HDR\", \"Smart TV\" ], \"description\": \"Experience the future of television with this stunning 8K TV.\", \"price\": 2999.99 } { \"name\": \"SoundMax Soundbar\", \"category\": \"Televisions and Home Theater Systems\", \"brand\": \"SoundMax\", \"model_number\": \"SM-SB50\", \"warranty\": \"1 year\", \"rating\": 4.3, \"features\": [ \"2.1 channel\", \"300W output\", \"Wireless subwoofer\", \"Bluetooth\" ], \"description\": \"Upgrade your TV's audio with this sleek and powerful soundbar.\", \"price\": 199.99 } { \"name\": \"CineView OLED TV\", \"category\": \"Televisions and Home Theater Systems\", \"brand\": \"CineView\", \"model_number\": \"CV-OLED55\", \"warranty\": \"2 years\", \"rating\": 4.7, \"features\": [ \"55-inch display\", \"4K resolution\", \"HDR\", \"Smart TV\" ], \"description\": \"Experience true blacks and vibrant colors with this OLED TV.\", \"price\": 1499.99 }\"\"\"\n\n```\n:::\n\n\n## Question and answer pair\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\nq_a_pair = f\"\"\"\n\nProduct information: ```{product_information}```\nAgent response: ```{final_response_to_customer}```\n\nDoes the response use the retrieved information correctly?\nDoes the response sufficiently answer the question\n\nOutput Y or N\n\"\"\"\n```\n:::\n\n\n## Messages and response\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\nmessages = [\n    {'role': 'system', 'content': system_message},\n    {'role': 'user', 'content': q_a_pair}\n]\n```\n:::\n\n\n. . .\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\nresponse = get_completion_from_messages(messages, max_tokens=1)\nprint(response)\n```\n:::\n\n\n- Y\n\n# Output Check 2\n\n\n## Another response\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\nanother_response = \"Learning to program ChatGPT in Python: where you ask a machine how to teach it to talk, and hope it does not get smarter than you! üí¨üêç\"\n```\n:::\n\n\n## Question answer pair\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\nq_a_pair = f\"\"\"\nCustomer message: ```{customer_message}```\nProduct information: ```{product_information}```\nAgent response: ```{another_response}```\n\nDoes the response use the retrieved information correctly?\nDoes the response sufficiently answer the question?\n\nOutput Y or N\n\"\"\"\n```\n:::\n\n\n## Messages and response\n\n::: {.cell execution_count=14}\n``` {.python .cell-code}\nmessages = [\n    {'role': 'system', 'content': system_message},\n    {'role': 'user', 'content': q_a_pair}\n]\n```\n:::\n\n\n. . .\n\n::: {.cell execution_count=15}\n``` {.python .cell-code}\nresponse = get_completion_from_messages(messages)\nprint(response)\n```\n:::\n\n\n- N\n\n\n# Acknowledgments\n\nThis tutorial is mainly based on the excellent course ‚ÄúBuilding Systems with the ChatGPT API‚Äù provided by Isa Fulford from OpenAI and Andrew Ng from DeepLearning.AI\n\n# What's next? {background-image=\"../images/logo.png\" background-opacity=\"0.5\"}\n\n**Congratulations! You have completed this tutorial** üëç\n\n\n**Next, you may want to go back to the [lab's website](https://kirenz.github.io/lab-chat-system/)**\n\n",
    "supporting": [
      "outputcheck_files"
    ],
    "filters": [],
    "includes": {}
  }
}